{"version":3,"sources":["LoginScreen.js","LoginSucess.js","App.js","reportWebVitals.js","index.js"],"names":["LoginScreen","history","useHistory","clientId","_useState","useState","_useState2","_slicedToArray","coords","setCoords","useEffect","gapi","load","auth2","init","client_id","buttonStyle","backgroundColor","color","marginTop","padding","borderRadius","fontWeight","cursor","width","React","createElement","className","Container","maxWidth","Grid","container","spacing","justifyContent","alignItems","item","xs","style","boxShadow","display","marginBottom","textAlign","TextField","label","variant","fullWidth","type","Button","_objectSpread","flexDirection","Link","to","textDecoration","GoogleLogin","onSuccess","response","console","log","userData","name","profileObj","email","profilePicture","imageUrl","navigator","geolocation","getCurrentPosition","position","_position$coords","latitude","longitude","push","pathname","state","user","error","onFailure","buttonText","FacebookLogin","LoginSuccess","useLocation","App","Router","Switch","Route","path","component","exact","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f2fb9a47.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Container, TextField, Button, Grid } from '@mui/material';\nimport GoogleLogin from 'react-google-login';\nimport FacebookLogin from 'react-facebook-login';\nimport { gapi } from 'gapi-script';\nimport './LoginScreen.css';\n\nconst LoginScreen = () => {\n  const history = useHistory();\n  const clientId = '231057203284-vmjdr09plm6e9oc6l5stggfalf75reup.apps.googleusercontent.com';\n  const [coords, setCoords] = useState(null);\n\n  useEffect(() => {\n    gapi.load('auth2', () => {\n      gapi.auth2.init({ client_id: clientId });\n    });\n  }, [clientId]);\n\n  const handleGoogleLoginSuccess = (response) => {\n    console.log(response);\n\n    const userData = {\n      name: response.profileObj.name,\n      email: response.profileObj.email,\n      profilePicture: response.profileObj.imageUrl,\n    };\n\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          const { latitude, longitude } = position.coords;\n          setCoords({ latitude, longitude });\n\n          console.log('Latitude:', latitude);\n          console.log('Longitude:', longitude);\n\n          history.push({\n            pathname: '/LoginSucess',\n            state: { user: userData, coords },\n          });\n        },\n        (error) => {\n          console.error(error);\n        }\n      );\n    } else {\n      history.push({\n        pathname: '/LoginSucess',\n        state: { user: userData },\n      });\n    }\n  };\n\n  const handleGoogleLoginFailure = (response) => {\n    console.log(response);\n  };\n\n  const handleFacebookLogin = (response) => {\n    console.log(response);\n  };\n\n  const handleFacebookLoginFailure = (response) => {\n    console.log(response);\n  };\n\n  const buttonStyle = {\n    backgroundColor: 'rgb(215, 56, 55)',\n    color: 'white',\n    marginTop: '10px',\n    padding: '10px 20px',\n    borderRadius: '4px',\n    fontWeight: 'bold',\n    cursor: 'pointer',\n    width: '100%',\n  };\n\n  return (\n    <div>\n      <div className=\"login-screen-content\">\n        <Container maxWidth=\"xs\">\n          <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\" className=\"login-form-container\">\n            <Grid item xs={12}>\n              <div style={{ padding: '20px', borderRadius: '8px', boxShadow: '0px 2px 10px rgba(0, 0, 0, 0.1)' }}>\n                <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', marginBottom: '20px' }}>\n                  {/* ... */}\n                </div>\n                <h2 style={{ textAlign: 'center' }}>Login</h2>\n                <TextField label=\"Email\" variant=\"outlined\" fullWidth />\n                <TextField label=\"Senha\" type=\"password\" variant=\"outlined\" fullWidth style={{ marginTop: '10px' }} />\n                <Button variant=\"contained\" color=\"secondary\" fullWidth style={{ ...buttonStyle, marginTop: '20px' }}>\n                  Login\n                </Button>\n                <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', marginTop: '20px' }}>\n                  <Link to=\"/cadastro\" style={{ textDecoration: 'none', marginBottom: '10px', width: '100%' }}>\n                    <Button variant=\"contained\" color=\"secondary\" style={buttonStyle}>\n                      Criar uma conta\n                    </Button>\n                  </Link>\n                  <div style={{ display: 'flex', alignItems: 'center', width: '100%', marginBottom: '10px' }}>\n                    <GoogleLogin\n                      clientId={clientId}\n                      onSuccess={handleGoogleLoginSuccess}\n                      onFailure={handleGoogleLoginFailure}\n                      buttonText=\"Google\"\n                    />\n                    <div style={{ width: '10px' }} />\n                    <FacebookLogin\n                      clientId=\"13fb2f1e94f7c31e7746297793fd5ac6\"\n                      onSuccess={handleFacebookLogin}\n                      onFailure={handleFacebookLoginFailure}\n                      buttonText=\"Facebook\"\n                    />\n                  </div>\n                </div>\n              </div>\n            </Grid>\n          </Grid>\n        </Container>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginScreen;\n","import React from 'react';\nimport { Container } from '@mui/material';\nimport { useLocation } from 'react-router-dom';\n\nconst LoginSuccess = () => {\n  const location = useLocation();\n  const user = location.state.user;\n\n  return (\n    <Container>\n      <h2>Seja bem-vindo, {user.name}!</h2>\n      <p>Email: {user.email}</p>\n    </Container>\n  );\n}\n\nexport default LoginSuccess;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport LoginScreen from './LoginScreen';\nimport LoginSuccess from './LoginSucess';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/login\" component={LoginScreen} />\n        <Route exact path=\"/LoginSucess\" component={LoginSuccess} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\nreportWebVitals();"],"sourceRoot":""}