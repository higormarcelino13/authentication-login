'use strict';

var React = require('react');

var _this$1 = undefined;
var Login = function (props) {
    var handleCredentialResponse = function (response) {
        if (typeof props.onSuccess === 'function') {
            props.onSuccess(response);
        }
    };
    var signin = function () {
        // @ts-ignore
        google.accounts.id.prompt(function (notification) {
            if (notification.getDismissedReason() === 'credential_returned') {
                props.onReturn && props.onReturn(notification);
            }
            if (notification.isNotDisplayed()) {
                props.onFailure && props.onFailure(notification);
            }
        });
    };
    var setGoogle = function () {
        google.accounts.id.initialize({
            client_id: props.client_id,
            callback: handleCredentialResponse.bind(_this$1),
            auto_select: true,
            cancel_on_tap_outside: false,
        });
        var googleLoginDiv = document.getElementById('g_id_signin');
        if (!props.content) {
            // @ts-ignore
            google.accounts.id.renderButton(googleLoginDiv, {
                type: "standard",
                theme: "outline",
                size: "large"
            });
        }
    };
    React.useEffect(function () {
        // @ts-ignore
        // @ts-ignore
        window.onGoogleLibraryLoad = function () {
            setGoogle();
        };
        if (document.getElementById('google-jssdk')) {
            setGoogle();
        }
        (function (d, s, id) {
            var _a;
            var js, fjs = d.getElementsByTagName(s)[0];
            if (d.getElementById(id)) {
                return;
            }
            js = d.createElement('script');
            js.id = id;
            js.src = "https://accounts.google.com/gsi/client?onload=googleSDKLoaded";
            (_a = fjs === null || fjs === void 0 ? void 0 : fjs.parentNode) === null || _a === void 0 ? void 0 : _a.insertBefore(js, fjs);
        }(document, 'script', 'google-jssdk'));
    }, [props.client_id]);
    return (React.createElement(React.Fragment, null, props.content ? props.content(signin) : React.createElement("div", { id: "g_id_signin", onClick: signin })));
};

var UnlogGoogle = function (props) {
    var unlog = function () {
        try {
            // @ts-ignore
            google.accounts.id.disableAutoSelect();
            props.onSuccess && props.onSuccess(true);
        }
        catch (e) {
            props.onFailure && props.onFailure(e);
        }
    };
    React.useEffect(function () {
        (function (d, s, id) {
            var _a;
            var js, fjs = d.getElementsByTagName(s)[0];
            if (d.getElementById(id)) {
                return;
            }
            js = d.createElement('script');
            js.id = id;
            js.src = "https://accounts.google.com/gsi/client?onload=googleSDKLoaded";
            (_a = fjs === null || fjs === void 0 ? void 0 : fjs.parentNode) === null || _a === void 0 ? void 0 : _a.insertBefore(js, fjs);
        }(document, 'script', 'google-jssdk'));
    }, []);
    return (React.createElement("div", null, props.content ? props.content(unlog) : React.createElement("button", { onClick: unlog }, "Unlog")));
};

var Unlog = function (props) {
    var _a = React.useState(false), unlog = _a[0], setUnlog = _a[1];
    React.useEffect(function () {
        if (props.trigger) {
            // @ts-ignore
            window.onGoogleLibraryLoad = function () {
                try {
                    // @ts-ignore
                    google.accounts.id.disableAutoSelect();
                    setUnlog(true);
                    props.onSuccess && props.onSuccess(true);
                }
                catch (e) {
                    props.onFailure && props.onFailure(e);
                }
            };
            (function (d, s, id) {
                var _a;
                var js, fjs = d.getElementsByTagName(s)[0];
                if (d.getElementById(id)) {
                    return;
                }
                js = d.createElement('script');
                js.id = id;
                js.src = "https://accounts.google.com/gsi/client?onload=googleSDKLoaded";
                (_a = fjs === null || fjs === void 0 ? void 0 : fjs.parentNode) === null || _a === void 0 ? void 0 : _a.insertBefore(js, fjs);
            }(document, 'script', 'google-jssdk'));
        }
    }, [props.trigger]);
    return [unlog];
};

var _this = undefined;
var Log = function (props) {
    var _a = React.useState(false), logged = _a[0], setLogged = _a[1];
    var handleCredentialResponse = function (response) {
        setLogged(true);
        props.onSuccess && props.onSuccess(response);
    };
    React.useEffect(function () {
        if (props.trigger) {
            // @ts-ignore
            google.accounts.id.prompt(function (notification) {
                if (notification.getDismissedReason() === 'credential_returned') {
                    props.onReturn && props.onReturn(notification);
                }
                if (notification.isNotDisplayed()) {
                    props.onFailure && props.onFailure(notification);
                }
            });
        }
    }, [props.trigger]);
    React.useEffect(function () {
        // @ts-ignore
        window.onGoogleLibraryLoad = function () {
            // @ts-ignore
            google.accounts.id.initialize({
                client_id: props.client_id,
                callback: handleCredentialResponse.bind(_this),
                auto_select: true,
                cancel_on_tap_outside: false,
            });
            // @ts-ignore
        };
        if (document.getElementById('google-jssdk')) {
            // @ts-ignore
            google.accounts.id.initialize({
                client_id: props.client_id,
                callback: handleCredentialResponse.bind(_this),
                auto_select: true,
                cancel_on_tap_outside: false,
            });
        }
        (function (d, s, id) {
            var _a;
            var js, fjs = d.getElementsByTagName(s)[0];
            if (d.getElementById(id)) {
                return;
            }
            js = d.createElement('script');
            js.id = id;
            js.src = "https://accounts.google.com/gsi/client?onload=googleSDKLoaded";
            (_a = fjs === null || fjs === void 0 ? void 0 : fjs.parentNode) === null || _a === void 0 ? void 0 : _a.insertBefore(js, fjs);
        }(document, 'script', 'google-jssdk'));
    }, [props.client_id]);
    return [logged];
};

exports.Log = Log;
exports.Login = Login;
exports.Unlog = Unlog;
exports.UnlogGoogle = UnlogGoogle;
//# sourceMappingURL=index.js.map
