import React from 'react';

interface ButtonProps {
    client_id: string;
    onSuccess?: (response: any) => void;
    onFailure?: (response: any) => void;
    onReturn?: (response: any) => void;
    content?: (data: any) => React.ReactNode;
}
declare const Login: (props: ButtonProps) => JSX.Element;

interface UnlogProps$1 {
    onSuccess?: (response: any) => void;
    onFailure?: (response: any) => void;
    client_id?: string;
    content?: (data: any) => React.ReactNode;
}
declare const UnlogGoogle: (props: UnlogProps$1) => JSX.Element;

interface UnlogProps {
    onSuccess?: (response: any) => void;
    onFailure?: (response: any) => void;
    trigger?: boolean;
}
declare const Unlog: (props: UnlogProps) => boolean[];

interface LogProps {
    client_id: string;
    onSuccess?: (response: any) => void;
    onFailure?: (response: any) => void;
    onReturn?: (response: any) => void;
    trigger?: boolean;
}
declare const Log: (props: LogProps) => boolean[];

export { Log, Login, Unlog, UnlogGoogle };
